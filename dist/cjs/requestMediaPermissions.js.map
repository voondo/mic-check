{
  "version": 3,
  "sources": ["../esm/requestMediaPermissions.js"],
  "sourcesContent": ["import Bowser from 'bowser';\nexport var MediaPermissionsErrorType;\n(function (MediaPermissionsErrorType) {\n    /** (macOS) browser does not have permission to access cam/mic */\n    MediaPermissionsErrorType[\"SystemPermissionDenied\"] = \"SystemPermissionDenied\";\n    /** user denied permission for site to access cam/mic */\n    MediaPermissionsErrorType[\"UserPermissionDenied\"] = \"UserPermissionDenied\";\n    /** (Windows) browser does not have permission to access cam/mic OR camera is in use by another application or browser tab */\n    MediaPermissionsErrorType[\"CouldNotStartVideoSource\"] = \"CouldNotStartVideoSource\";\n    /** all other errors */\n    MediaPermissionsErrorType[\"Generic\"] = \"Generic\";\n})(MediaPermissionsErrorType || (MediaPermissionsErrorType = {}));\n/**\n * Request camera and mic permissions from the browser.\n * @returns\n */\nexport const requestMediaPermissions = (constraints) => {\n    return new Promise((resolve, reject) => {\n        navigator.mediaDevices\n            .getUserMedia(constraints ?? { audio: true, video: true })\n            .then((stream) => {\n            stream.getTracks().forEach((t) => {\n                t.stop();\n            });\n            resolve(true);\n        })\n            .catch((err) => {\n            const browser = Bowser.getParser(window.navigator.userAgent);\n            const browserName = browser.getBrowserName();\n            const errName = err.name;\n            const errMessage = err.message;\n            let errorType = MediaPermissionsErrorType.Generic;\n            if (browserName === 'Chrome') {\n                if (errName === 'NotAllowedError') {\n                    if (errMessage === 'Permission denied by system') {\n                        errorType =\n                            MediaPermissionsErrorType.SystemPermissionDenied;\n                    }\n                    else if (errMessage === 'Permission denied' ||\n                        errMessage === 'Permission dismissed') {\n                        errorType =\n                            MediaPermissionsErrorType.UserPermissionDenied;\n                    }\n                }\n                else if (errName === 'NotReadableError') {\n                    errorType =\n                        MediaPermissionsErrorType.CouldNotStartVideoSource;\n                }\n            }\n            else if (browserName === 'Safari') {\n                if (errName === 'NotAllowedError') {\n                    errorType =\n                        MediaPermissionsErrorType.UserPermissionDenied;\n                }\n            }\n            else if (browserName === 'Microsoft Edge') {\n                if (errName === 'NotAllowedError') {\n                    errorType =\n                        MediaPermissionsErrorType.UserPermissionDenied;\n                }\n                else if (errName === 'NotReadableError') {\n                    errorType =\n                        MediaPermissionsErrorType.CouldNotStartVideoSource;\n                }\n            }\n            else if (browserName === 'Firefox') {\n                // https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia#exceptions\n                if (errName === 'NotFoundError') {\n                    errorType =\n                        MediaPermissionsErrorType.SystemPermissionDenied;\n                }\n                else if (errName === 'NotReadableError') {\n                    errorType =\n                        MediaPermissionsErrorType.SystemPermissionDenied;\n                }\n                else if (errName === 'NotAllowedError') {\n                    errorType =\n                        MediaPermissionsErrorType.UserPermissionDenied;\n                }\n                else if (errName === 'AbortError') {\n                    errorType =\n                        MediaPermissionsErrorType.CouldNotStartVideoSource;\n                }\n            }\n            reject({\n                type: errorType,\n                name: err.name,\n                message: err.message,\n            });\n            // Brave cannot be detected by the bowser library because they removed Brave from the User Agent to reduce fingerprinting\n            // https://github.com/brave/browser-laptop/blob/master/CHANGELOG.md#090\n        });\n    });\n};\nexport const requestAudioPermissions = () => requestMediaPermissions({ audio: true, video: false });\nexport const requestVideoPermissions = () => requestMediaPermissions({ audio: false, video: true });\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAmB;AACZ,IAAI;AAAA,CACV,SAAUA,4BAA2B;AAElC,EAAAA,2BAA0B,4BAA4B;AAEtD,EAAAA,2BAA0B,0BAA0B;AAEpD,EAAAA,2BAA0B,8BAA8B;AAExD,EAAAA,2BAA0B,aAAa;AAC3C,GAAG,8BAA8B,4BAA4B,CAAC,EAAE;AAKzD,MAAM,0BAA0B,CAAC,gBAAgB;AACpD,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACpC,cAAU,aACL,aAAa,oCAAe,EAAE,OAAO,MAAM,OAAO,KAAK,CAAC,EACxD,KAAK,CAAC,WAAW;AAClB,aAAO,UAAU,EAAE,QAAQ,CAAC,MAAM;AAC9B,UAAE,KAAK;AAAA,MACX,CAAC;AACD,cAAQ,IAAI;AAAA,IAChB,CAAC,EACI,MAAM,CAAC,QAAQ;AAChB,YAAM,UAAU,cAAAC,QAAO,UAAU,OAAO,UAAU,SAAS;AAC3D,YAAM,cAAc,QAAQ,eAAe;AAC3C,YAAM,UAAU,IAAI;AACpB,YAAM,aAAa,IAAI;AACvB,UAAI,YAAY,0BAA0B;AAC1C,UAAI,gBAAgB,UAAU;AAC1B,YAAI,YAAY,mBAAmB;AAC/B,cAAI,eAAe,+BAA+B;AAC9C,wBACI,0BAA0B;AAAA,UAClC,WACS,eAAe,uBACpB,eAAe,wBAAwB;AACvC,wBACI,0BAA0B;AAAA,UAClC;AAAA,QACJ,WACS,YAAY,oBAAoB;AACrC,sBACI,0BAA0B;AAAA,QAClC;AAAA,MACJ,WACS,gBAAgB,UAAU;AAC/B,YAAI,YAAY,mBAAmB;AAC/B,sBACI,0BAA0B;AAAA,QAClC;AAAA,MACJ,WACS,gBAAgB,kBAAkB;AACvC,YAAI,YAAY,mBAAmB;AAC/B,sBACI,0BAA0B;AAAA,QAClC,WACS,YAAY,oBAAoB;AACrC,sBACI,0BAA0B;AAAA,QAClC;AAAA,MACJ,WACS,gBAAgB,WAAW;AAEhC,YAAI,YAAY,iBAAiB;AAC7B,sBACI,0BAA0B;AAAA,QAClC,WACS,YAAY,oBAAoB;AACrC,sBACI,0BAA0B;AAAA,QAClC,WACS,YAAY,mBAAmB;AACpC,sBACI,0BAA0B;AAAA,QAClC,WACS,YAAY,cAAc;AAC/B,sBACI,0BAA0B;AAAA,QAClC;AAAA,MACJ;AACA,aAAO;AAAA,QACH,MAAM;AAAA,QACN,MAAM,IAAI;AAAA,QACV,SAAS,IAAI;AAAA,MACjB,CAAC;AAAA,IAGL,CAAC;AAAA,EACL,CAAC;AACL;AACO,MAAM,0BAA0B,MAAM,wBAAwB,EAAE,OAAO,MAAM,OAAO,MAAM,CAAC;AAC3F,MAAM,0BAA0B,MAAM,wBAAwB,EAAE,OAAO,OAAO,OAAO,KAAK,CAAC;",
  "names": ["MediaPermissionsErrorType", "Bowser"]
}
